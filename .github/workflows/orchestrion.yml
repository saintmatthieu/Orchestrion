name: Orchestrion

on:
    push:
      branches: [master]
      tags: ['v*']
    pull_request:
      branches: [master]

env:
  BUILD_TYPE: Release
  BUILD_DIR: build

jobs:
  test_codesign:
    runs-on: macos-latest
    # https://github.com/saintmatthieu/Orchestrion/actions/runs/13467307513/artifacts/2633681874 has a previous successful build.
    # Right now we only want to test the codesigning process, so let's reuse this artifact.
    # beware: this URL has a zip that has a dmg that has the app, and it's the app we want to codesign.
    steps:
    - name: Download artifact
      run: |
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             -H "Accept: application/vnd.github.v3+json" \
             -o artifact.zip \
             -L "https://api.github.com/repos/saintmatthieu/Orchestrion/actions/artifacts/2633681874/zip"

    - name: Extract zip
      run: |
        unzip artifact.zip -d ./artifacts

    - name: Mount dmg
      run: |
        hdiutil attach ./artifacts/Orchestrion.dmg
        cp -R /Volumes/Orchestrion/OrchestrionApp.app ./artifacts/
        hdiutil detach /Volumes/Orchestrion

    - name: Codesign executable
      env: 
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      run: |
        echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
        security find-identity -v
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "" build.keychain
        codesign --deep --force --verify --verbose --sign $MACOS_CERTIFICATE ${{env.BUILD_DIR}}/OrchestrionApp.app

  build_mac:
    if: false
    runs-on: macos-latest

    steps:
    - name: Install Git LFS
      run: brew install git-lfs

    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Pull LFS files
      run: git lfs pull

    - name: Cache Qt
      uses: actions/cache@v4
      with:
        path: "/usr/local/Qt"
        key: ${{ runner.os }}-qt

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.2.4'
        arch: 'clang_64'
        target: 'desktop'
        modules: qtnetworkauth qt5compat qtscxml
        cache: true

    - name: Cache Ninja
      uses: actions/cache@v4
      with:
        path: "/usr/local/bin/ninja"
        key: ${{ runner.os }}-ninja

    - name: Install Ninja
      run: brew install ninja

    - name: Setup macOS
      run: |
        export PATH="/usr/local/opt/qt/bin:$PATH"
        export PATH="/usr/local/opt/ninja/bin:$PATH"

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -G Ninja -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DSMTG_ENABLE_VST3_HOSTING_EXAMPLES=OFF -DSMTG_ENABLE_VST3_PLUGIN_EXAMPLES=OFF -DSMTG_ENABLE_VSTGUI_SUPPORT=OFF -DSNDFILE_INCDIR=dummy -Denable-libsndfile=OFF

    - name: Build
      run: cmake --build ${{github.workspace}}/${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}} --target install

    - name: Run macdeployqt
      run: macdeployqt ${{env.BUILD_DIR}}/OrchestrionApp.app

    - name: Codesign executable
      env: 
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      run: |
        echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
        security find-identity -v
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "" build.keychain
        codesign --deep --force --verify --verbose --sign $MACOS_CERTIFICATE ${{env.BUILD_DIR}}/OrchestrionApp.app

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Orchestrion Mac
        path: ${{env.BUILD_DIR}}/OrchestrionApp.app

# https://localazy.com/blog/how-to-automatically-sign-macos-apps-using-github-actions